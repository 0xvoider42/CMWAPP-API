services:
  api:
    build:
      dockerfile: Dockerfile
      context: .
    container_name: campaign-management-api
    env_file:
      - .env
    networks:
      - app
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - ${PORT:-3000}:${PORT:-3000}
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres
    container_name: campaign-management-db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-campaign_management}
      PGDATA: ${PG_DATA:-/data/postgres}
    env_file:
      - .env
    ports:
      - ${DB_PORT:-5432}:${DB_PORT:-5432}
    volumes:
      - postgres:/data/postgres
    networks:
      - app
    command: -p ${DB_PORT:-5432}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app:
    driver: bridge

volumes:
  postgres: